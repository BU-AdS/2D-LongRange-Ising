#Your path to CUDA
CUDA=${CUDA_ROOT}
CUDA_LIBS= -lcurand -lcudart 

TARGET	 = long_range

SOURCES  = main.cpp util.cpp data_io.cpp data_proc.cpp mcPhiFourth2D.cpp phiFourth2D.cpp mcIsing2D.cpp 
OBJS     = main.o util.o data_io.o data_proc.o mcPhiFourth2D.o phiFourth2D.o mcIsing2D.o ising2D.o 
INCLUDES = util.h mcPhiFourth2D.h phiFourth2D.h mcIsing2D.h ising2D.h 

SOURCES+=gpuMC.cu
OBJS+=gpuMC.o
INCLUDES+=gpuMC.cuh
LIBS=-L${CUDA}/lib64 ${CUDA_LIBS} -L${CUDA}/lib64/stubs -lcuda

ERRS=-Wall -Wno-sign-compare -Wno-int-in-bool-context -Wno-unused-but-set-variable -Wno-unknown-warning-option

CXX = g++
OMP_FLAG= -DUSE_OMP -fopenmp
GPU_FLAG= -DUSE_GPU
CUDA_9 = -DCUDA_9
CXXFLAGS = -O3 -g -Wall -std=c++11  -I. -I${EIGEN} ${ERRS} ${OMP_FLAG} ${GPU_FLAG} -I${CUDA}/include 

#-maxrregcount=38
NVCC = ${CUDA}/bin/nvcc 
NVCCFLAGS = -O3 -std=c++11  -I. -I${EIGEN} -I${CUDA}/include ${GPU_FLAG} -arch compute_60

#============================================================

all: $(TARGET)

${TARGET}: ${OBJS}
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(OBJS) $(LIBS)

main.o: main.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c main.cpp

util.o: util.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c util.cpp

data_io.o: data_io.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c data_io.cpp

data_proc.o: data_proc.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c data_proc.cpp

ising2D.o: ising2D.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c ising2D.cpp

mcIsing2D.o: mcIsing2D.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c mcIsing2D.cpp

mcPhiFourth2D.o: mcPhiFourth2D.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c mcPhiFourth2D.cpp

phiFourth2D.o: phiFourth2D.cpp $(INCLUDES) 
	${CXX} ${CXXFLAGS} -c phiFourth2D.cpp

gpuMC.o: gpuMC.cu $(INCLUDES) 
	${NVCC} ${NVCCFLAGS} -c gpuMC.cu

ALL_SOURCES = Makefile $(SOURCES) $(INCLUDES) 

clean:
	rm -f $(TARGET) $(OBJS) core *.~*~

tar: $(ALL_SOURCES) $(NOTES)
	tar cvf $(TARGET).tar $(ALL_SOURCES) $(NOTES)
